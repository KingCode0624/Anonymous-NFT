// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GroupJoined extends ethereum.Event {
  get params(): GroupJoined__Params {
    return new GroupJoined__Params(this);
  }
}

export class GroupJoined__Params {
  _event: GroupJoined;

  constructor(event: GroupJoined) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LotteryPayout extends ethereum.Event {
  get params(): LotteryPayout__Params {
    return new LotteryPayout__Params(this);
  }
}

export class LotteryPayout__Params {
  _event: LotteryPayout;

  constructor(event: LotteryPayout) {
    this._event = event;
  }

  get lotteryPayoutAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get questionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get groupId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get question(): string {
    return this._event.parameters[3].value.toString();
  }

  get eligibleHolderTokenContract(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get answerThreshold(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get bountyAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get upVote(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get downVote(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class QuestionAdded extends ethereum.Event {
  get params(): QuestionAdded__Params {
    return new QuestionAdded__Params(this);
  }
}

export class QuestionAdded__Params {
  _event: QuestionAdded;

  constructor(event: QuestionAdded) {
    this._event = event;
  }

  get questionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get groupId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get question(): string {
    return this._event.parameters[2].value.toString();
  }

  get eligibleHolderTokenContract(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get answerThreshold(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get bountyAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class QuestionAnswered extends ethereum.Event {
  get params(): QuestionAnswered__Params {
    return new QuestionAnswered__Params(this);
  }
}

export class QuestionAnswered__Params {
  _event: QuestionAnswered;

  constructor(event: QuestionAnswered) {
    this._event = event;
  }

  get questionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get groupId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isUpvote(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get totalVotes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Sharknado__getQuestionListResultValue0Struct extends ethereum.Tuple {
  get questionId(): BigInt {
    return this[0].toBigInt();
  }

  get groupId(): BigInt {
    return this[1].toBigInt();
  }

  get question(): string {
    return this[2].toString();
  }

  get eligibleHolderTokenContract(): Address {
    return this[3].toAddress();
  }

  get answerThreshold(): BigInt {
    return this[4].toBigInt();
  }

  get bountyAmount(): BigInt {
    return this[5].toBigInt();
  }

  get upVote(): BigInt {
    return this[6].toBigInt();
  }

  get downVote(): BigInt {
    return this[7].toBigInt();
  }

  get lotteryPayoutAddresses(): Array<Address> {
    return this[8].toAddressArray();
  }

  get isPayedOut(): boolean {
    return this[9].toBoolean();
  }
}

export class Sharknado__unpackDataResult {
  value0: Address;
  value1: boolean;

  constructor(value0: Address, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): boolean {
    return this.value1;
  }
}

export class Sharknado extends ethereum.SmartContract {
  static bind(address: Address): Sharknado {
    return new Sharknado("Sharknado", address);
  }

  getQuestionList(): Array<Sharknado__getQuestionListResultValue0Struct> {
    let result = super.call(
      "getQuestionList",
      "getQuestionList():((uint256,uint256,string,address,uint32,uint256,uint32,uint32,address[],bool)[])",
      []
    );

    return result[0].toTupleArray<
      Sharknado__getQuestionListResultValue0Struct
    >();
  }

  try_getQuestionList(): ethereum.CallResult<
    Array<Sharknado__getQuestionListResultValue0Struct>
  > {
    let result = super.tryCall(
      "getQuestionList",
      "getQuestionList():((uint256,uint256,string,address,uint32,uint256,uint32,uint32,address[],bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Sharknado__getQuestionListResultValue0Struct>()
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  packData(_address: Address, _isUpvote: boolean): BigInt {
    let result = super.call("packData", "packData(address,bool):(uint256)", [
      ethereum.Value.fromAddress(_address),
      ethereum.Value.fromBoolean(_isUpvote)
    ]);

    return result[0].toBigInt();
  }

  try_packData(
    _address: Address,
    _isUpvote: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall("packData", "packData(address,bool):(uint256)", [
      ethereum.Value.fromAddress(_address),
      ethereum.Value.fromBoolean(_isUpvote)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  semaphore(): Address {
    let result = super.call("semaphore", "semaphore():(address)", []);

    return result[0].toAddress();
  }

  try_semaphore(): ethereum.CallResult<Address> {
    let result = super.tryCall("semaphore", "semaphore():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  unpackData(_packedData: BigInt): Sharknado__unpackDataResult {
    let result = super.call(
      "unpackData",
      "unpackData(uint256):(address,bool)",
      [ethereum.Value.fromUnsignedBigInt(_packedData)]
    );

    return new Sharknado__unpackDataResult(
      result[0].toAddress(),
      result[1].toBoolean()
    );
  }

  try_unpackData(
    _packedData: BigInt
  ): ethereum.CallResult<Sharknado__unpackDataResult> {
    let result = super.tryCall(
      "unpackData",
      "unpackData(uint256):(address,bool)",
      [ethereum.Value.fromUnsignedBigInt(_packedData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Sharknado__unpackDataResult(
        value[0].toAddress(),
        value[1].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get semaphoreAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddQuestionCall extends ethereum.Call {
  get inputs(): AddQuestionCall__Inputs {
    return new AddQuestionCall__Inputs(this);
  }

  get outputs(): AddQuestionCall__Outputs {
    return new AddQuestionCall__Outputs(this);
  }
}

export class AddQuestionCall__Inputs {
  _call: AddQuestionCall;

  constructor(call: AddQuestionCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get question(): string {
    return this._call.inputValues[1].value.toString();
  }

  get eligibleHolderTokenContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get answerThreshold(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get bountyAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class AddQuestionCall__Outputs {
  _call: AddQuestionCall;

  constructor(call: AddQuestionCall) {
    this._call = call;
  }
}

export class JoinGroupCall extends ethereum.Call {
  get inputs(): JoinGroupCall__Inputs {
    return new JoinGroupCall__Inputs(this);
  }

  get outputs(): JoinGroupCall__Outputs {
    return new JoinGroupCall__Outputs(this);
  }
}

export class JoinGroupCall__Inputs {
  _call: JoinGroupCall;

  constructor(call: JoinGroupCall) {
    this._call = call;
  }

  get _questionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _identityCommitment(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class JoinGroupCall__Outputs {
  _call: JoinGroupCall;

  constructor(call: JoinGroupCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendAnswerToQuestionCall extends ethereum.Call {
  get inputs(): SendAnswerToQuestionCall__Inputs {
    return new SendAnswerToQuestionCall__Inputs(this);
  }

  get outputs(): SendAnswerToQuestionCall__Outputs {
    return new SendAnswerToQuestionCall__Outputs(this);
  }
}

export class SendAnswerToQuestionCall__Inputs {
  _call: SendAnswerToQuestionCall;

  constructor(call: SendAnswerToQuestionCall) {
    this._call = call;
  }

  get _questionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _isUpvote(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get _lotteryPayoutAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _merkleTreeRoot(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _nullifierHash(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _proof(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class SendAnswerToQuestionCall__Outputs {
  _call: SendAnswerToQuestionCall;

  constructor(call: SendAnswerToQuestionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
